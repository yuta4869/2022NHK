%%BeginResource: procset Adobe_typography_AI3 2.0 0
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
where
{
pop
}
{
Adobe_typography_AI3 begin
Adobe_typography_AI3
{
dup xcheck
{
bind
} if
pop pop
} forall
end
Adobe_typography_AI3 begin
} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
{
end
} if
} def
/modifyEncoding
{
/_tempEncode exch ddef

/_pntr 0 ddef

{
counttomark -1 roll
dup type dup /marktype eq 		
{
pop pop exit
}
{
/nametype eq
{
_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
put
}
{
/_pntr exch ddef					
}
ifelse
}
ifelse
}
loop	

_tempEncode
}
def
/TE
{
StandardEncoding 256 array copy modifyEncoding 
/_nativeEncoding exch def
} def
%
/TZ		
{
dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
/_useNativeEncoding exch def
pop pop

findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict

begin

mark exch
{
1 index /FID ne { def } if cleartomark mark
}
forall
pop

/FontName exch def

counttomark 0 eq
{
1 _useNativeEncoding eq
{
/Encoding _nativeEncoding def
}
if
cleartomark
}
{	
/Encoding load 256 array copy 
modifyEncoding /Encoding exch def
}
ifelse		
FontName currentdict
end

definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
{
dup 
currentpoint 3 2 roll
tr _psf
newpath moveto
tr _ctm _pss
} ddef
/Tj
{
dup
currentpoint 3 2 roll
trj _pjsf
newpath moveto
trj _ctm _pjss
} ddef

} def
/a1
{
/Tx
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
tr _psf
newpath moveto
tr _ctm _pss
grestore 3 1 roll moveto tr sp
} ddef
/Tj
{
dup currentpoint 4 2 roll gsave
dup currentpoint 3 2 roll
trj _pjsf
newpath moveto
trj _ctm _pjss
grestore 3 1 roll moveto tr sp
} ddef

} def
/e0
{
/Tx
{
tr _psf
} ddef
/Tj
{
trj _pjsf
} ddef
} def
/e1
{
/Tx
{
dup currentpoint 4 2 roll gsave 
tr _psf  
grestore 3 1 roll moveto tr sp 
} ddef
/Tj
{
dup currentpoint 4 2 roll gsave 
trj _pjsf
grestore 3 1 roll moveto tr sp 
} ddef
} def
/i0
{
/Tx
{
tr sp
} ddef
/Tj
{
trj jsp
} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
{
tr sw rmoveto
} ddef
/Tj
{
trj swj rmoveto
} ddef
} def
/r0
{
/Tx
{
tr _ctm _pss
} ddef
/Tj
{
trj _ctm _pjss
} ddef
} def
/r1
{
/Tx
{
dup currentpoint 4 2 roll currentpoint gsave newpath moveto
tr _ctm _pss 
grestore 3 1 roll moveto tr sp 
} ddef
/Tj
{
dup currentpoint 4 2 roll currentpoint gsave newpath moveto
trj _ctm _pjss
grestore 3 1 roll moveto tr sp 
} ddef
} def
/To
{
pop _ctm currentmatrix pop
} def
/TO
{
iTe _ctm setmatrix newpath
} def
/Tp
{
pop _tm astore pop _ctm setmatrix 
_tDict begin /W {} def /h {} def
} def
/TP
{
end
iTm 0 0 moveto
} def
/Tr
{
_render 3 le {currentpoint newpath moveto} if
dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
dup /_render exch ddef
_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
